springdoc.swagger-ui.path=/openapi/swagger-ui.html
springdoc.api-docs.path=/openapi/v3/api-docs
springdoc.packages-to-scan=be.snife.sbms
springdoc.paths-to-match=/**

server.port=7000
server.error.include-message=always

logging.level.root=INFO
logging.level.be.snife.sbms=DEBUG

app.product-service.host=localhost
app.product-service.port=7001
app.recommendation-service.host=localhost
app.recommendation-service.port=7002
app.review-service.host=localhost
app.review-service.port=7003

spring.main.allow-circular-references=true

# RABBIT
#spring.cloud.stream.defaultBinder=rabbit

# KAFKA
spring.cloud.stream.defaultBinder=kafka

spring.cloud.stream.default.contentType=application/json

spring.cloud.stream.bindings.products-out-0.destination=products
spring.cloud.stream.bindings.products-out-0.producer.required-groups=auditGroup
spring.cloud.stream.bindings.recommendations-out-0.destination=recommendations
spring.cloud.stream.bindings.recommendations-out-0.producer.required-groups=auditGroup
spring.cloud.stream.bindings.reviews-out-0.destination=reviews
spring.cloud.stream.bindings.reviews-out-0.producer.required-groups=auditGroup

# RABBIT
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

# KAFKA
spring.cloud.stream.kafka.binder.brokers=127.0.0.1
spring.cloud.stream.kafka.binder.defaultBrokerPort=29092

# SPRINGBOOT ADMIN
spring.boot.admin.client.instance.name=ProductCompositeService
spring.boot.admin.client.url=http://localhost:1111
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=secret
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

management.endpoint.health.show-details=ALWAYS
management.endpoints.web.exposure.include=*

#---
spring.config.activate.on-profile=docker
server.port=8080

app.product-service.host=product
app.product-service.port=8080
app.recommendation-service.host=recommendation
app.recommendation-service.port=8080
app.review-service.host=review
app.review-service.port=8080

# RABBIT
#spring.rabbitmq.host=rabbitmq

# KAFKA
spring.cloud.stream.kafka.binder.brokers=kafka

#---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.products-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.products-out-0.producer.partition-count=2

spring.cloud.stream.bindings.recommendations-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.recommendations-out-0.producer.partition-count=2

spring.cloud.stream.bindings.reviews-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.reviews-out-0.producer.partition-count=2

#---

# KAFKA
spring.config.activate.on-profile=kafka

management.health.rabbit.enabled=false
spring.cloud.stream.defaultBinder=kafka
spring.kafka.bootstrap-servers=kafka:29092
spring.cloud.stream.kafka.binder.replication-factor=1